@model List<GaragePortal.Razor.Models.CarDTO>

@{
    ViewData["Title"] = "Vehicle Fleet";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    :root {
        --primary-color: #2a4365;
        --secondary-color: #4299e1;
        --accent-color: #38b2ac;
        --light-color: #ebf8ff;
        --dark-color: #1a365d;
        --success-color: #48bb78;
        --warning-color: #ed8936;
        --danger-color: #f56565;
        --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.05), 0 1px 3px rgba(0, 0, 0, 0.1);
        --hover-shadow: 0 10px 15px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    body {
        background-color: #f7fafc;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .dashboard-container {
        max-width: 1400px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .dashboard-header {
        background-color: white;
        border-radius: 0.5rem;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--card-shadow);
        border-left: 4px solid var(--primary-color);
    }

    .dashboard-title {
        color: var(--primary-color);
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .dashboard-subtitle {
        color: #4a5568;
        font-weight: 500;
    }

    .stats-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        flex: 1;
        min-width: 200px;
        background: white;
        border-radius: 0.5rem;
        padding: 1.5rem;
        box-shadow: var(--card-shadow);
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: transform 0.2s ease;
    }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--hover-shadow);
        }

    .stat-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: var(--light-color);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--primary-color);
        font-size: 1.25rem;
    }

    .stat-content h3 {
        margin: 0;
        font-size: 1.5rem;
        color: var(--dark-color);
    }

    .stat-content p {
        margin: 0;
        color: #718096;
        font-size: 0.875rem;
    }

    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .btn-primary-action {
        background-color: var(--accent-color);
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.375rem;
        color: white;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
    }

        .btn-primary-action:hover {
            background-color: #319795;
            transform: translateY(-1px);
            box-shadow: 0 4px 6px rgba(49, 151, 149, 0.3);
            color: white;
        }

    .vehicle-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .vehicle-card {
        background: white;
        border-radius: 0.5rem;
        overflow: hidden;
        box-shadow: var(--card-shadow);
        transition: all 0.2s ease;
        border-top: 3px solid var(--secondary-color);
    }

        .vehicle-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--hover-shadow);
        }

    .vehicle-header {
        padding: 1.5rem;
        border-bottom: 1px solid #e2e8f0;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .vehicle-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: var(--light-color);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--secondary-color);
        font-size: 1.25rem;
    }

    .vehicle-info h4 {
        margin: 0;
        font-size: 1.125rem;
        color: var(--dark-color);
    }

    .vehicle-info p {
        margin: 0;
        color: #718096;
        font-size: 0.875rem;
    }

    .vehicle-actions {
        padding: 1rem 1.5rem;
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

    .action-btn {
        flex: 1;
        min-width: 80px;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        font-size: 0.8125rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
        border: 1px solid transparent;
    }

    .btn-service {
        background-color: var(--success-color);
        color: white;
    }

        .btn-service:hover {
            background-color: #38a169;
            color: white;
        }

    .btn-history {
        background-color: var(--secondary-color);
        color: white;
    }

        .btn-history:hover {
            background-color: #3182ce;
            color: white;
        }

    .btn-delete {
        background-color: var(--danger-color);
        color: white;
    }

        .btn-delete:hover {
            background-color: #e53e3e;
            color: white;
        }

    .empty-state {
        background: white;
        border-radius: 0.5rem;
        padding: 3rem 2rem;
        text-align: center;
        box-shadow: var(--card-shadow);
        grid-column: 1 / -1;
    }

    .empty-icon {
        width: 80px;
        height: 80px;
        margin: 0 auto 1.5rem;
        background-color: var(--light-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--secondary-color);
        font-size: 2rem;
    }

    .empty-title {
        color: var(--dark-color);
        margin-bottom: 0.5rem;
    }

    .empty-text {
        color: #718096;
        margin-bottom: 1.5rem;
    }

    /* Modal Styles */
    .modal-content {
        border-radius: 0.5rem;
        border: none;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }

    .modal-header {
        background-color: var(--primary-color);
        color: white;
        border-radius: 0.5rem 0.5rem 0 0;
        padding: 1.25rem 1.5rem;
        border: none;
    }

    .modal-title {
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        border-top: 1px solid #e2e8f0;
        padding: 1rem 1.5rem;
        border-radius: 0 0 0.5rem 0.5rem;
    }

    .form-label {
        font-weight: 500;
        color: var(--dark-color);
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-control, .form-select {
        border-radius: 0.375rem;
        border: 1px solid #e2e8f0;
        padding: 0.5rem 0.75rem;
        transition: all 0.2s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.2);
        }

    .alert {
        border-radius: 0.375rem;
        padding: 1rem;
        margin-bottom: 1.5rem;
        border-left: 4px solid transparent;
    }

    .alert-warning {
        background-color: #fffaf0;
        border-left-color: var(--warning-color);
        border-left-color: var(--warning-color);
        color: #9c4221;
    }



    {
        grid-template-columns: 1fr;
    }

    .stat-card {
        min-width: 100%;
    }

    }
</style>

<div class="dashboard-container">
    <div class="dashboard-header">
        <h1 class="dashboard-title">@ViewBag.Name's Vehicle Fleet</h1>
        <p class="dashboard-subtitle">Manage your vehicles and service history</p>
    </div>

    <div class="stats-container">
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-car"></i>
            </div>
            <div class="stat-content">
                <h3>@Model.Count()</h3>
                <p>Total Vehicles</p>
            </div>
        </div>
    </div>

    <div class="action-bar">
        <button class="btn-primary-action" data-bs-toggle="modal" data-bs-target="#addCarModal">
            <i class="fas fa-plus"></i> Add Vehicle
        </button>
    </div>

    @if (TempData["CarExists"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["CarExists"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Any())
    {
        <div class="vehicle-grid">
            @foreach (var car in Model)
            {
                <div class="vehicle-card">
                    <div class="vehicle-header">
                        <div class="vehicle-icon">
                            <i class="fas fa-car"></i>
                        </div>
                        <div class="vehicle-info">
                            <h4>@car.LicensePlate</h4>
                            <p>Vehicle Registration</p>
                        </div>
                    </div>

                    <div class="vehicle-actions">
                        <button type="button" class="action-btn btn-service" data-bs-toggle="modal" data-bs-target="#addServiceModal"
                                data-car-id="@car.VehicleId">
                            <i class="fas fa-wrench"></i>  Add Service
                        </button>
                        <button type="button" class="action-btn btn-history" data-bs-toggle="modal" data-bs-target="#viewServicesModal"
                                data-car-id="@car.VehicleId" data-car-reg="@car.LicensePlate">
                            <i class="fas fa-history"></i> View
                        </button>
                        <button type="button" class="action-btn btn-delete delete-car-btn"
                                data-car-id="@car.VehicleId">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-car"></i>
            </div>
            <h3 class="empty-title">No Vehicles Found</h3>
            <p class="empty-text">Add your first vehicle to get started</p>
            <button class="btn-primary-action" data-bs-toggle="modal" data-bs-target="#addCarModal">
                <i class="fas fa-plus"></i> Add Vehicle
            </button>
        </div>
    }
</div>

<!-- Add Car Modal -->
     

<div class="modal fade" id="addCarModal" tabindex="-1" data-bs-backdrop="false" data-bs-keyboard="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="addCarForm" asp-controller="Car" asp-action="AddNewCar" method="post">
                <input type="hidden" name="ClientId" value="@ViewBag.CustomerId" />
                <div class="modal-header">
                    <h5 class="modal-title"><i class="fas fa-plus me-2"></i>Add New Vehicle</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="addCarAlert" class="alert d-none"></div>
                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-id-card"></i> License Plate</label>
                        <input name="LicensePlate" class="form-control" placeholder="e.g., ABC-123" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-service" id="submitCarBtn">
                        <i class="fas fa-save me-1"></i> Save Vehicle
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Service Modal -->

<div class="modal fade" id="addServiceModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="false" data-bs-keyboard="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form asp-controller="Service" asp-action="AddServiceToCar" method="post">
                <input type="hidden" name="VehicleId" id="serviceCarId" />
                <div class="modal-header">
                    <h5 class="modal-title"><i class="fas fa-wrench me-2"></i>Schedule Service</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-user-cog"></i> Select Mechanic</label>
                        <select name="TechnicianId" class="form-select" required>
                            <option value="">-- Choose Technician --</option>
                            @foreach (var mechanic in ViewBag.Mechanics)
                            {
                                <option value="@mechanic.TechnicianId">@mechanic.TechnicianName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-calendar"></i> Repair Date</label>
                        <input type="date" name="RepairDate" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label"><i class="fas fa-clipboard"></i> Work that should be done</label>
                        <textarea name="EstimatedWorkDescription" class="form-control" rows="3" placeholder="e.g. brake replacement"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-service">
                        <i class="fas fa-save me-1"></i> Schedule Service
                    </button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- View Services Modal -->
<div class="modal fade" id="viewServicesModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="false" data-bs-keyboard="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-history me-2"></i>Service History: <span id="carRegTitle"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th><i class="fas fa-calendar me-1"></i>Date</th>
                                <th><i class="fas fa-user me-1"></i>Mechanic</th>
                                <th><i class="fas fa-clipboard me-1"></i>Work to be done</th>
                                <th><i class="fas fa-clock me-1"></i>Hours</th>
                                <th><i class="fas fa-cog me-1"></i>Action</th>
                            </tr>
                        </thead>
                        <tbody id="servicesList">
                            <!-- Will be populated dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form id="antiForgeryForm" method="post">
    @Html.AntiForgeryToken()
</form>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    // Ensure modals work properly
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize all modals
        const modals = document.querySelectorAll('.modal');
        modals.forEach(modal => {
            modal.addEventListener('hidden.bs.modal', function() {
                // Ensure body scrolling is restored when modal closes
                document.body.style.overflow = '';
                document.body.classList.remove('modal-open');

                // Remove any lingering backdrops
                const backdrops = document.querySelectorAll('.modal-backdrop');
                backdrops.forEach(backdrop => backdrop.remove());
            });
        });
    });

    // View Services Modal Script
    document.getElementById('viewServicesModal').addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var carId = button.getAttribute('data-car-id');
        var carReg = button.getAttribute('data-car-reg');

        if (!carId || carId === 'null' || carId === 'undefined' || carId.trim() === '') {
            const tbody = document.getElementById('servicesList');
            tbody.innerHTML = "<tr><td colspan='5' class='text-center text-danger'><i class='fas fa-exclamation-triangle me-2'></i>Error: No car ID found</td></tr>";
            return;
        }

        document.getElementById('carRegTitle').textContent = carReg || 'Unknown Car';
        const tbody = document.getElementById('servicesList');
        tbody.innerHTML = "<tr><td colspan='5' class='text-center'><i class='fas fa-spinner fa-spin me-2'></i>Loading services...</td></tr>";

        const url = `/Service/GetServicesForCar?carId=${encodeURIComponent(carId)}`;

        fetch(url, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(services => {
            if (Array.isArray(services)) {
                if (services.length === 0) {
                    tbody.innerHTML = "<tr><td colspan='5' class='text-center text-muted'><i class='fas fa-info-circle me-2'></i>No services found for this vehicle</td></tr>";
                    return;
                }

                tbody.innerHTML = "";
                services.forEach((service) => {
                    const row = `
                        <tr data-service-id="${service.repairId || 'unknown'}">
                            <td><i class="fas fa-calendar me-2 text-primary"></i>${service.repairDate ? new Date(service.repairDate).toLocaleDateString() : 'N/A'}</td>
                            <td><i class="fas fa-user me-2 text-success"></i>${service.technicianName || 'N/A'}</td>
                            <td>${service.estimatedWorkDescription || 'N/A'}</td>
                            <td><i class="fas fa-clock me-2 text-warning"></i>${service.hours || 'N/A'}h</td>
                            <td>
                                <button type="button" class="btn btn-sm btn-outline-danger"
                                        data-service-id="${service.repairId || ''}"
                                        onclick="deleteService(this.getAttribute('data-service-id'))">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>`;
                    tbody.innerHTML += row;
                });
            } else {
                tbody.innerHTML = "<tr><td colspan='5' class='text-center text-danger'><i class='fas fa-exclamation-triangle me-2'></i>Unexpected response format</td></tr>";
            }
        })
        .catch(error => {
            tbody.innerHTML = `<tr><td colspan='5' class='text-center text-danger'><i class='fas fa-exclamation-triangle me-2'></i>Error: ${error.message}</td></tr>`;
        });
    });

    // Delete Service Function
    function deleteService(id) {
        if (confirm('Are you sure you want to delete this service record?')) {
            fetch(`/Service/Delete/${id}`, {
                method: 'POST',
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to delete service');
                }
            })
            .catch(error => console.error('Error:', error));
        }
    }

    // Add Service Modal Script
    var addServiceModal = document.getElementById('addServiceModal');
    addServiceModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var carId = button.getAttribute('data-car-id');
        var inputCarId = addServiceModal.querySelector('#serviceCarId');
        inputCarId.value = carId;
    });

    // Delete Car Script
    document.addEventListener('DOMContentLoaded', function () {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        document.querySelectorAll('.delete-car-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const carId = this.getAttribute('data-car-id');

                if (confirm("Are you sure you want to remove this vehicle from your fleet?")) {
                    fetch(`/Car/DeleteCar/${carId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify({})
                    })
                    .then(res => {
                        if (res.ok) {
                            location.reload();
                        } else {
                            alert("Failed to remove the vehicle.");
                        }
                    })
                    .catch(err => {
                        console.error("Error:", err);
                        alert("An error occurred.");
                    });
                }
            });
        });
    });
</script>